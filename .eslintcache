[{"D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\index.js":"1","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\reportWebVitals.js":"2","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\App.js":"3","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\Home.jsx":"4","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Components\\navbar.jsx":"5","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Components\\footer.jsx":"6","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\helpers\\smoothScroll.js":"7","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\About.jsx":"8","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\Jati\\jati.jsx":"9","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\GSAP.jsx":"10","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\GSAP\\gsap2.jsx":"11","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\About2.jsx":"12","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\Joshua + partners\\joshua.jsx":"13","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\to-do-list\\todo.jsx":"14"},{"size":478,"mtime":1626949203245,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1121,"mtime":1627917339803,"results":"18","hashOfConfig":"16"},{"size":10738,"mtime":1627960049161,"results":"19","hashOfConfig":"16"},{"size":808,"mtime":1627658051794,"results":"20","hashOfConfig":"16"},{"size":1621,"mtime":1627960357661,"results":"21","hashOfConfig":"16"},{"size":149,"mtime":1627124750389,"results":"22","hashOfConfig":"16"},{"size":4658,"mtime":1627619173308,"results":"23","hashOfConfig":"16"},{"size":8432,"mtime":1627918156040,"results":"24","hashOfConfig":"16"},{"size":2927,"mtime":1627655587457,"results":"25","hashOfConfig":"16"},{"size":2249,"mtime":1627875076762,"results":"26","hashOfConfig":"16"},{"size":6854,"mtime":1627964460929,"results":"27","hashOfConfig":"16"},{"size":8557,"mtime":1627918597486,"results":"28","hashOfConfig":"16"},{"size":8454,"mtime":1627919490456,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1q7lrau",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"32"},"D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\index.js",[],["68","69"],"D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\reportWebVitals.js",[],"D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\App.js",["70"],"import React from \"react\"\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\n\n// Import Components\nimport Navbar from \"./Components/navbar\"\nimport Footer from \"./Components/footer\"\n\n// Import Pages\nimport Home from \"./Pages/Home\"\nimport About from \"./Pages/About\"\nimport Jati from \"./Pages/Jati/jati\"\nimport Gsap from \"./Pages/GSAP\"\nimport Gsap2 from \"./Pages/GSAP/gsap2\"\nimport Joshua from \"./Pages/Joshua + partners/joshua\"\nimport About2 from \"./Pages/About2\"\nimport Todo from \"./Pages/to-do-list/todo\"\n\nclass App extends React.Component{\n  render(){\n    return(\n     <BrowserRouter>\n      <Navbar/>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/jati\" component={Jati}/>\n        <Route path=\"/joshua\" component={Joshua}/>\n        <Route path=\"/todolist\" component={Todo}/>\n\n          {/* Test */}\n        <Route path=\"/gsap\" component={Gsap}/>\n        <Route path=\"/gsap2\" component={Gsap2}/>\n        <Route path=\"/about2\" component={About2}/>\n      </Switch>\n    \n     </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\Home.jsx",["71","72"],"import React,{useRef, useEffect} from \"react\"\r\nimport \"./../Supports/utils.css\"\r\nimport \"./../Supports/home.css\"\r\nimport gsap,{Power3} from \"gsap\"\r\n\r\n// Images\r\nimport JatiHome from \"./../assets/Jati/testing.jpg\"\r\nimport JoshuaHome from \"./../assets/Joshua/JoshuaHome.JPG\"\r\nimport TommyHome from \"./../assets/Tommy web/TommyHome.png\"\r\nimport Register from \"./../assets/todo/register.png\"\r\n\r\n// Footer\r\nimport Footer from \"../Components/footer\"\r\n\r\n// import Function\r\nimport SmoothScroll from \"smooth-scroll\"\r\n\r\nfunction Home(){\r\n    let tl = gsap.timeline({delay:0.4})\r\n    \r\n    let hello = useRef(null)\r\n    let initiateHome = useRef(null)\r\n    let firstLine = useRef(null)\r\n    let secondLine = useRef(null)\r\n    let thirdLine = useRef(null)\r\n    let fourthLine = useRef(null)\r\n    let fifthLine = useRef(null)\r\n    let sixthLine = useRef(null)\r\n    let seventhLine = useRef(null)\r\n\r\n    useEffect(() => {\r\n        \r\n\r\n        gsap.to(initiateHome, {duration:0, css:{visibility:\"visible\"}})\r\n\r\n        tl.from(hello, {duration:0.5,opacity:0, x:-400, ease:Power3.easeOut })\r\n        .from(firstLine, {duration:0.5, opacity:0, x:400, ease:Power3.easeOut}, .2)\r\n        .from(secondLine, {duration:0.5, opacity:0, x:-400, ease:Power3.easeOut}, .4)\r\n        .from(thirdLine, {duration:1.2, y:40, ease:Power3.easeOut},1.4)\r\n        .from(fourthLine, {duration:1.2, y:100, ease:Power3.easeOut},1.4)\r\n        .from(fifthLine, {duration:1.2, y:45, ease:Power3.easeOut},2.1)\r\n        .from(sixthLine, {duration:1.2, y:80, ease:Power3.easeOut}, 2.1)\r\n        .from(seventhLine, {duration:1, y:250, ease:Power3.easeOut}, 1.9)\r\n    })\r\n\r\n    return(\r\n        <>\r\n        <div ref={el => initiateHome = el} className=\"HomeAwal scrollSmooth\">\r\n            {/* Home Head and Navbar */}\r\n            <div className=\"bg\">\r\n                <div className=\"container-fluid px-5\" style={{overflow:\"hidden\"}}>\r\n                    <div className=\"navbar px-0 fontKanit sticky-top\">\r\n                        \r\n                    </div>\r\n                    <div ref={el => hello = el} className=\"hello fontPlay\">\r\n                        Hello !\r\n                    </div>\r\n\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"col px-0\">\r\n                            \r\n                        </div>\r\n                        <div className=\"col px-0\">\r\n                            <div ref={el => firstLine = el} className=\"full-stack fontkanit\">\r\n                                <div>\r\n                                    Full-stack Developer\r\n                                </div>\r\n                                <div className=\"garisPertama\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div ref={el => secondLine = el} className=\"d-flex fontKanit\" style={{color:\"white\"}}>\r\n                        <div className=\"col-1 px-0\">\r\n                            \r\n                        </div>\r\n                        <div className=\"col-2 px-0\">\r\n                            <div className=\"textTahun\">\r\n                                2020-2021\r\n                            </div>\r\n                            <div className=\"garisKedua\">\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-9 px-0 fontPlay\">\r\n                            <div className=\"web\">\r\n                                Web / Mobile App\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div  className=\"fontKanit\">\r\n                        <div className=\"indonesian d-flex justify-content-center\" style={{overflow:\"hidden\"}}>\r\n                            <div ref={el => thirdLine = el}>\r\n                                Indonesian\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center indonesian2 fontPlay\" style={{overflow:\"hidden\"}}>\r\n                            <div ref={el => fourthLine = el}>\r\n                                Full Stack Developer\r\n                            </div>\r\n                        </div>\r\n                      \r\n                    </div>\r\n\r\n                    <div className=\"d-flex container sectionWelcome\">\r\n                        <div className=\"col-2 px-0\">\r\n                            \r\n                        </div>\r\n                        <div className=\"col-3 fontPlay px-0\">\r\n                            <div className=\"welcome\" style={{overflow:\"hidden\"}}>\r\n                                <div ref={el => fifthLine = el}>\r\n                                    Welcome.\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"selamatDatang\" style={{overflow:\"hidden\"}}>\r\n                                <div ref={el => sixthLine = el}>\r\n                                    Selamat Datang !\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"bodyWelcome fontKanit col-12 py-2\" style={{overflow:\"hidden\"}}>\r\n                                <div ref={el => seventhLine = el}>\r\n                                23 years old from Indonesia who like to turn your ideas into an outstanding \r\n                                website.I am a full-stack developer who using MERN Stack and find a oportunity to collaborate\r\n                                with you!.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div> \r\n                </div>\r\n            </div>\r\n\r\n            {/* Home Body */}\r\n            <div className=\"bgBody\">\r\n                <div className=\"container justify-content-center border d-flex px-0\">\r\n                    <div className=\"d-flex col-12 flex-column flex-md-row px-0 scroll martopBody\">\r\n                        <div className=\"col px-0\">\r\n                            <div className=\"col-md-11 col-12 px-md-0 px-3 martopJati\">\r\n                                    <a href=\"/jati\">\r\n                                        <img src={JatiHome} alt=\"\" className=\"cardImg-1\" />\r\n                                    </a>\r\n                                <div className=\"textCardHeading fontPlay\">\r\n                                    Jati\r\n                                </div>\r\n                                <div className=\"textCardBody fontKanit col-11 px-0\">\r\n                                    Non-commercial personal project with furniture ecommerce theme.\r\n                                    Using features such as JWT, add-to-cart, etc.\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <div className=\"textViewProject fontKanit\">\r\n                                        <a className=\"textViewProject fontKanit\" href=\"/jati\">View Project.</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* <div className=\"col-10 px-0\" style={{marginTop:\"100px\"}}>\r\n                                <img src={TommyHome} alt=\"\" className=\"cardImg-1\"/>\r\n                                <div className=\"textCardHeading fontPlay\">\r\n                                   Tommy Boentoro's\r\n                                </div>\r\n                                <div className=\"textCardBody fontKanit col-11 px-0\">\r\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In porttitor in \r\n                                    ligula eget placerat. \r\n                                </div>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <div className=\"textViewProject fontKanit\">\r\n                                        View Project.\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                        <div className=\"col d-flex flex-column align-md-items-end px-0\">\r\n                            <div className=\"px-md-0 px-3 col widthJoshua\">\r\n                                <a href=\"/joshua\">\r\n                                    <img src={JoshuaHome} alt=\"\" className=\"cardImg-2\" />\r\n                                </a>\r\n                                <div className=\"textCardHeading fontPlay\">\r\n                                    Joshua + partners \r\n                                </div>\r\n                                <div className=\"textCardBody fontKanit col-10 px-0\">\r\n                                    Profesional website portofolio that engaged in interior design and architecture\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <div className=\"textViewProject fontKanit\">\r\n                                        <a className=\"textViewProject fontKanit\" href=\"/joshua\">View Project.</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"px-md-0 px-3 col widthJoshua marginRegister\">\r\n                                <a href=\"/todolist\">\r\n                                    <img src={Register} alt=\"\" className=\"cardImg-2\"/>\r\n                                </a>\r\n                                <div className=\"textCardHeading fontPlay\">\r\n                                    To-do-list \r\n                                </div>\r\n                                <div className=\"textCardBody fontKanit col-11 px-0\">\r\n                                    My very first project with full front and back-end. Very simple yet nostalgic.\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <div className=\"textViewProject fontKanit\">\r\n                                        <a className=\"textViewProject fontKanit\" href=\"/todolist\">View Project.</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer/>\r\n        </>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Home","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Components\\navbar.jsx",[],"D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Components\\footer.jsx",["73"],"// import CSS\r\nimport \"./../Components/footer.css\"\r\n\r\nfunction Footer (){\r\n    return(\r\n        <div className=\"bgFooter d-flex align-items-center\">\r\n            <div className=\"container-fluid d-flex px-5\" style={{color:\"white\"}}>\r\n                <div className=\"col px-0 fontPlay\">\r\n                    <div className=\"footer1\" >\r\n                        Tommyboentoro@gmail.com \r\n                    </div>\r\n                    <div className=\"fontKanit\">\r\n                        <div className=\"footerBody col-md-6 col-12 px-0\">\r\n                            23 years old from Indonesia who like to turn your ideas into an outstanding \r\n                            website.I am a full-stack developer who using MERN Stack and find a oportunity to collaborate\r\n                            with you!.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footerRight d-flex flex-column fontPlay align-items-end col px-0\">\r\n                    <div>\r\n                        <div className=\"footer1\">\r\n                            Contact Me\r\n                        </div>\r\n                        <div className=\"footerBody fontKanit\">\r\n                            <a className=\"contactMe\" target=\"_blank\" href=\"https://www.instagram.com/tommyboentoro/\">Instagram</a>\r\n                        </div>\r\n                        <div className=\"footerBody fontKanit\">\r\n                            Twitter\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\helpers\\smoothScroll.js",[],["74","75"],"D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\About.jsx",[],"D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\Jati\\jati.jsx",["76"],"import React,{useRef, useEffect} from \"react\"\r\nimport gsap,{Power3} from \"gsap\"\r\nimport {useIntersection} from \"react-use\"\r\nimport \"./../Jati/jati.css\"\r\nimport CSSRulePlugin from \"gsap/CSSRulePlugin\"\r\n\r\n// Import Images\r\nimport JatiTest from \"./../../assets/Jati/testing.jpg\"\r\nimport JatiHome from \"./../../assets/Jati/Home.png\"\r\nimport JatiPayment from \"./../../assets/Jati/Payment.png\"\r\nimport JatiLogin from \"./../../assets/Jati/Login.png\"\r\n\r\n// Footer\r\nimport Footer from \"../../Components/footer\"\r\n\r\nfunction Jati(){\r\n\r\n    let imageJati = useRef(null)\r\n    let imageJatiInner = useRef(null)\r\n    let initialJati = useRef(null)\r\n    let jatiText = useRef(null)\r\n    let jatiProject = useRef(null)\r\n    let jatiDeveloper = useRef(null)\r\n\r\n    let tl = gsap.timeline({delay:\".8\"})\r\n    let imageJatiReveal = CSSRulePlugin.getRule(`.image-outer:after`)\r\n\r\n    useEffect (() => {\r\n        gsap.to(initialJati, {duration:0, css:{visibility:\"visible\"}})\r\n        // IMAGE\r\n        tl.to(imageJatiReveal, {duration:1.4, width:\"0%\", ease:Power3.easeOut})\r\n        .from(imageJatiInner, {duration:1.4, scale:1.6, ease:Power3.easeOut, delay:\"-1.4\"})\r\n        .from(jatiText, {duration:1.4, opacity:0, ease:Power3.easeOut})\r\n        .from(jatiProject, {duration:1.4, y:100, ease:Power3.easeOut, delay:\"-1\"})\r\n        .from(jatiDeveloper, {duration:1.4, y:100, ease:Power3.easeOut, delay:\"-1.4\"})\r\n        \r\n    })\r\n\r\n    // INTERSECTION\r\n\r\n    const sectionRef = useRef(null);\r\n\r\n    const intersection = useIntersection(sectionRef, {\r\n        root: null,\r\n        rootMargin: \"0px\",\r\n        threshold: 0.8\r\n    });\r\n\r\n    const fadeIn = (sectionRef) => {\r\n        gsap.to(sectionRef, {\r\n            duration: 1,\r\n            opacity: 1,\r\n            y: -60,\r\n            ease: \"Power4.out\",\r\n            stagger: {\r\n                amount: .3\r\n            }\r\n        })\r\n    }\r\n\r\n    const fadeOut = (sectionRef) => {\r\n        gsap.to(sectionRef, {\r\n            duration: 0,\r\n            opacity: 1,\r\n            y: -20,\r\n            ease: \"Power4.out\",\r\n        })\r\n    }\r\n\r\n\r\n    intersection && intersection.intersectionRatio < 0.8 ?\r\n    fadeOut (\".bgJatiBody\")\r\n    : fadeIn(\".bgJatiBody\")\r\n\r\n    return(\r\n        <>\r\n        <div ref={el => initialJati = el} className=\"initialJati\">\r\n            <div className=\"bgJati\">\r\n                <div className=\"d-flex\">\r\n                    <div className=\"headerJati d-flex px-0\">\r\n                        <div ref={el => imageJati = el} className=\"col-12 px-0\">\r\n                            <div className=\"image-outer\" style={{overflow:\"hidden\"}}> \r\n                                <img ref={ el => imageJatiInner = el} src={JatiTest} alt=\"\" className=\"imageJumbotron\" />\r\n                            </div>\r\n                            <div className=\"overlay-black\">\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\" style={{marginTop:\"20px\"}}>\r\n                    <div>\r\n                        <div className = \"fontPlay fontHeader1\" style={{overflow:\"hidden\"}}>\r\n                            <div ref={el => jatiText = el}>\r\n                                Jati \r\n                            </div>\r\n                        </div>\r\n                        <div className = \"fontKanit fontHeader2\" style={{overflow:\"hidden\"}}>\r\n                            <div ref={el => jatiProject = el}>\r\n                                Personal project - On going\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"fontKanit fontHeader3\" style={{overflow:\"hidden\"}}>\r\n                            <div ref={el => jatiDeveloper = el}>\r\n                                Front-end Developer\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Body */}\r\n            <div className=\"bgJatiBody\" style={{overflow:\"hidden\"}}>\r\n                <div className=\"container\">\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"body1 px-0\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\">\r\n                                <div className=\"textHeaderProject\">\r\n                                    Jati\r\n                                </div>\r\n                                <div className=\"mx-3 textlink\">\r\n                                     Contact me for the link!\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"textBodyProject col-md-7 col-12 px-0\">\r\n                                Jati is a furniture online shop type of project such as IKEA or fabelio.\r\n                                Unfortunately i made Jati with front-end only so i used a fake-server as the back-end\r\n                                I made this project to learn more about MERN and how to applied it in online bussiness model.\r\n                                I am not really focusing on the design appeareances but the flow of online business model itself.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <div className=\"bodyImage1\">\r\n                            <img src={JatiHome} alt=\"\" className=\"imageProject\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-md-row flex-column\">\r\n                        <div className=\"col\">\r\n\r\n                        </div>\r\n                        <div className=\"body3 px-0 col\">\r\n                            <div className=\"textHeaderProject\">\r\n                                Flow & Features\r\n                            </div>\r\n                            <div className=\"textBodyProject px-0\">\r\n                                Jati contains quite lot of pages because normally e-commerce required a long flow\r\n                                from the user to login until checking out the product.It contains register/login page,\r\n                                home page, product page, detail product page, check-out page. Whilst the features has a basic\r\n                                e-commerce features such as search by product/category, add-to-cart, forgot password and so on.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex px-0\">\r\n                        <div className=\"bodyImage2\">\r\n                            <img src={JatiPayment} alt=\"\" className=\"imageProject\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"body3 px-0 col\">\r\n                            <div className=\"textHeaderProject\">\r\n                                Tools\r\n                            </div>\r\n                            <div className=\"textBodyProject col-md-7 col-12 px-0\">\r\n                                I used HTML, CSS, bootstrap, and of course reactJS library to make Jati. For handle the\r\n                                back-end I used JSON server and create a fake-server. I used a library called validator just to \r\n                                help me making a validation in register and login page more easier. \r\n                                Using JSON web token \"SHA256\" to secure user's informations\r\n                                and also local storage to send and map the data.\r\n                                Last but not least, I am using redux because redux allows me to manage Jati's state in a single place. \r\n                                moreover, it also predictable and traceable.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <div className=\"bodyImage3\">\r\n                           <img src={JatiLogin} alt=\"\" className=\"imageProject2\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer/>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Jati","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\GSAP.jsx",["77","78"],"import React, {useRef, useEffect, useState} from \"react\"\r\nimport \"./../Supports/gsap.css\"\r\n\r\nimport {TweenMax, Power3} from \"gsap\"\r\nimport { delay } from \"q\"\r\n\r\nfunction Gsap (){\r\n    let app = useRef(null)\r\n    let Gambar = useRef(null)\r\n    let Text = useRef(null)\r\n\r\n    // circle\r\n    let circle = useRef(null)\r\n    let circleRed = useRef(null)\r\n    let circleBlue = useRef(null)\r\n\r\n    const [state, setState] = useState(false)\r\n\r\n    const handleExpand = () => {\r\n        TweenMax.to(circleRed, .8, {width:200, height:200 , ease:Power3.easeInOut, x:50})\r\n        setState(true)\r\n    }\r\n\r\n    const handleShrink = () => {\r\n        TweenMax.to(circleRed, .8, {width:75, height:75 , ease:Power3.easeInOut, x:0})\r\n        setState(false)\r\n    }\r\n\r\n    console.log(Gambar)\r\n    useEffect(() => {\r\n        TweenMax.to (app, 0, {css: {visibility:\"visible\"}})\r\n        console.log(Gambar)\r\n        // TweenMax.to(\r\n        //     Gambar,\r\n        //     .8,\r\n        //     {\r\n        //         opacity: 1,\r\n        //         y:-50,\r\n        //         ease: Power3.easeOut\r\n        //     }\r\n        // )\r\n\r\n        // TweenMax.to(\r\n        //     Text,\r\n        //     .8,\r\n        //     {\r\n        //         opacity: 1,\r\n        //         y:-50,\r\n        //         ease: Power3.easeOut,\r\n        //         delay: .3\r\n        //     }\r\n        // )\r\n\r\n        TweenMax.staggerFrom([circle,circleRed,circleBlue], .8, {opacity: 0, x: 20, ease:Power3.easeOut}, .2)\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n        {/* TweenMax */}\r\n            <div ref={el => {app = el}} className=\"container app\" style={{marginTop:\"100px\"}}>\r\n                {/* <div style={{fontSize:\"2rem\", fontWeight:\"700\"}}> TweenMax 1</div>\r\n                <img className=\"gambar1\" ref={el => {Gambar = el}} src={Gambar1} alt=\"\" />\r\n                <div className=\"text1 col-6 px-0\" ref={el => {Text = el}}>\r\n                    Lorem ipsum dolor sit amet,consectetur adipiscing elit. \r\n                    In porttitor in ligula eget placerat. Nunc odio nulla, \r\n                    sollicitudin at diam non, pulvinar facilisis sapien. \r\n                    Aenean vel porttitor metus. \r\n                    Morbi laoreet turpis sit amet magna varius facilisis. \r\n                    Vivamus euismod dui ac nisi dapibus, \r\n                    sed malesuada urna tincidunt. Integer suscipit augue neci.\r\n                </div>\r\n                <hr /> */}\r\n                <div className=\"d-flex align-items-center flex-column\" style={{marginTop:\"100px\"}}>\r\n                    <div ref={el => {circle = el}} className=\"circle\"></div>\r\n                    <div onClick={state !== true ? handleExpand: handleShrink} ref={el => {circleRed = el}} className=\"circle red\"></div>\r\n                    <div ref={el => {circleBlue = el}} className=\"circle blue\"></div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Gsap","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\GSAP\\gsap2.jsx",["79","80","81","82","83","84","85"],"import React, {useRef, useEffect} from \"react\"\r\nimport \"./../GSAP/gsap2.css\"\r\nimport CatPhoto from \"./../../assets/gambarGsap.jpg\"\r\n\r\n// GSAP\r\nimport CSSRulePlugin from \"gsap/CSSRulePlugin\"\r\nimport {TimelineLite, Power2} from \"gsap\"\r\nimport gsap from \"gsap\"\r\n\r\nfunction Gsap2(){\r\n    // let kucing = useRef(null);\r\n    // let container = useRef(null);\r\n    // let imageReveal = CSSRulePlugin.getRule('.image:after');\r\n    \r\n    // let tl = new TimelineLite();\r\n\r\n    // useEffect(() => {\r\n    //     tl.to(container, 0, {css: {visibility:\"visible\"}})\r\n    //     .to(imageReveal, 1.4, {width: \"0%\", ease: Power2.easeOut})\r\n    //     .from(kucing, 1.4, {scale:\"1.6\", ease:Power2.easeInOut, delay:\"-1.4\"})\r\n    // });\r\n\r\n    // New Gsap\r\n\r\n    let hello = useRef(null)\r\n    let container = useRef(null)\r\n    let kucing = useRef(null)\r\n    let imageReveal = CSSRulePlugin.getRule('.image:after');\r\n    \r\n\r\n    let tl = gsap.timeline()\r\n\r\n    useEffect(() => {\r\n        // console.log(hello)\r\n        // tl.to(container, {duration:0, css:{visibility: \"visible\"}})\r\n        // .to(imageReveal, {duration:1.4, width:\"0%\", ease:Power2.easeOut})\r\n        // .from(kucing, {duration:1.4, scale:1.6, ease:Power2.easeInOut, delay:\"-1.4\"})\r\n        // .from(hello,{duration:1, opacity:0, y:180, ease:Power2, delay:\"-0.5\"})\r\n\r\n        gsap.to(\".box1\",{\r\n            scrollTrigger: \".box1\",\r\n            x:200,\r\n        })\r\n    })\r\n\r\n\r\n    return(\r\n        <>\r\n            <div ref={el => { container = el}} className=\"container d-flex flex-column justify-content-center\">\r\n                <div className=\"image\">\r\n                    <img ref={el => { kucing = el}} src={CatPhoto} alt=\"\"/>\r\n                </div>\r\n                <div className=\"marginGsap\">\r\n                    <div ref={el => {hello = el}} className=\"newGsap\">\r\n                        Hello New GSAP\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"containerscroll\">\r\n                <div className=\"container border\">\r\n                    <div className=\"box1 border my-5\" >\r\n                        Gerak\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Gsap2","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\About2.jsx",["86","87","88"],"D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\Joshua + partners\\joshua.jsx",["89"],"import React,{useRef, useEffect} from \"react\"\r\nimport gsap,{Power3} from \"gsap\"\r\nimport {useIntersection} from \"react-use\"\r\nimport \"./../Jati/jati.css\"\r\nimport CSSRulePlugin from \"gsap/CSSRulePlugin\"\r\n\r\n// Import Images\r\nimport JoshuaHome from \"./../../assets/Joshua/JoshuaHome.JPG\"\r\nimport JoshuaContact from \"./../../assets/Joshua/contact.png\"\r\nimport JoshuaProject from \"./../../assets/Joshua/home.png\"\r\nimport JoshuaProject2 from \"./../../assets/Joshua/home2.png\"\r\nimport JoshuaProject3 from \"./../../assets/Joshua/home3.png\"\r\n\r\n// Footer\r\nimport Footer from \"../../Components/footer\"\r\n\r\nfunction Joshua(){\r\n\r\n    let imageJati = useRef(null)\r\n    let imageJatiInner = useRef(null)\r\n    let initialJati = useRef(null)\r\n    let jatiText = useRef(null)\r\n    let jatiProject = useRef(null)\r\n    let jatiDeveloper = useRef(null)\r\n\r\n    let tl = gsap.timeline({delay:\".8\"})\r\n    let imageJatiReveal = CSSRulePlugin.getRule(`.image-outer:after`)\r\n\r\n    useEffect (() => {\r\n        gsap.to(initialJati, {duration:0, css:{visibility:\"visible\"}})\r\n        // IMAGE\r\n        tl.to(imageJatiReveal, {duration:1.4, width:\"0%\", ease:Power3.easeOut})\r\n        .from(imageJatiInner, {duration:1.4, scale:1.6, ease:Power3.easeOut, delay:\"-1.4\"})\r\n        .from(jatiText, {duration:1.4, opacity:0, ease:Power3.easeOut})\r\n        .from(jatiProject, {duration:1.4, y:100, ease:Power3.easeOut, delay:\"-1\"})\r\n        .from(jatiDeveloper, {duration:1.4, y:100, ease:Power3.easeOut, delay:\"-1.4\"})\r\n        \r\n    })\r\n\r\n    // INTERSECTION\r\n\r\n    const sectionRef = useRef(null);\r\n\r\n    const intersection = useIntersection(sectionRef, {\r\n        root: null,\r\n        rootMargin: \"0px\",\r\n        threshold: 0.8\r\n    });\r\n\r\n    const fadeIn = (sectionRef) => {\r\n        gsap.to(sectionRef, {\r\n            duration: 1,\r\n            opacity: 1,\r\n            y: -60,\r\n            ease: \"Power4.out\",\r\n            stagger: {\r\n                amount: .3\r\n            }\r\n        })\r\n    }\r\n\r\n    const fadeOut = (sectionRef) => {\r\n        gsap.to(sectionRef, {\r\n            duration: 0,\r\n            opacity: 1,\r\n            y: -20,\r\n            ease: \"Power4.out\",\r\n        })\r\n    }\r\n\r\n\r\n    intersection && intersection.intersectionRatio < 0.8 ?\r\n    fadeOut (\".bgJatiBody\")\r\n    : fadeIn(\".bgJatiBody\")\r\n\r\n    return(\r\n        <>\r\n        <div ref={el => initialJati = el} className=\"initialJati\">\r\n            <div className=\"bgJati\">\r\n                <div className=\"d-flex\">\r\n                    <div className=\"headerJati d-flex px-0\">\r\n                        <div ref={el => imageJati = el} className=\"col-12 px-0\">\r\n                            <div className=\"image-outer\" style={{overflow:\"hidden\"}}> \r\n                                <img ref={ el => imageJatiInner = el} src={JoshuaHome} alt=\"\" className=\"imageJumbotron\" />\r\n                            </div>\r\n                            <div className=\"overlay-black\">\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\" style={{marginTop:\"20px\"}}>\r\n                    <div>\r\n                        <div className = \"fontPlay fontHeader1\" style={{overflow:\"hidden\"}}>\r\n                            <div ref={el => jatiText = el}>\r\n                                Joshua + partners\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"fontKanit fontHeader2\" style={{overflow:\"hidden\"}}>\r\n                            <div ref={el => jatiProject = el}>\r\n                                Commercial project - Deploying\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"fontKanit fontHeader3\" style={{overflow:\"hidden\"}}>\r\n                            <div ref={el => jatiDeveloper = el}>\r\n                                Full-stack Developer\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Body */}\r\n            <div className=\"bgJatiBody\" style={{overflow:\"hidden\"}}>\r\n                <div className=\"container\">\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"body1 px-0\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\">\r\n                                <div className=\"textHeaderProject\">\r\n                                    Joshua Aditama + partners\r\n                                </div>\r\n                                <div className=\"mx-3 textlink\">\r\n                                     Contact me for the link!\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"textBodyProject col-md-7 col-12 px-0\">\r\n                                Joshua Aditama + partners is a multidiciplinary design studio which focused on spatial experience. They create a connection \r\n                                between art and human to experience interior and architectural spaces. From commercial to personal spaces drive their to explore \r\n                                the specialty of each projects as works of art.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <div className=\"bodyImage1\">\r\n                            <img src={JoshuaHome} alt=\"\" className=\"imageProject\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-md-row flex-column\">\r\n                        <div className=\"col\">\r\n\r\n                        </div>\r\n                        <div className=\"body3 px-0 col\">\r\n                            <div className=\"textHeaderProject\">\r\n                                Flow & Features\r\n                            </div>\r\n                            <div className=\"textBodyProject px-0\">\r\n                                Joshua's required 5 pages consist of home, project, project detail, studio, contact and not to mention \r\n                                the admin page. The features consist of nodemailer, JSON web token, post, edit and delete. It's quite tricky while making this website\r\n                                is a lot of customization in hover and slider effect. \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex px-0\">\r\n                        <div className=\"bodyImage2 d-flex\">\r\n                            <img src={JoshuaProject} alt=\"\" className=\"imageProject\" style={{objectFit:\"scale-down\"}} />\r\n                            <img src={JoshuaProject2} alt=\"\" className=\"imageProject mx-4\" style={{objectFit:\"scale-down\"}} />\r\n                            <img src={JoshuaProject3} alt=\"\" className=\"imageProject\" style={{objectFit:\"scale-down\"}} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"body3 px-0 col\">\r\n                            <div className=\"textHeaderProject\">\r\n                                Tools\r\n                            </div>\r\n                            <div className=\"textBodyProject col-md-7 col-12 px-0\">\r\n                                I used reactJS, html, css, bootstrap to make Joshua's website. There are some \r\n                                library that i used in order to create the front-end such as react-slick, react-strap\r\n                                and react-icon. While in the\r\n                                back-end I am using MySQL as a database, nodeJS, express and also \r\n                                JSON web token \"SHA256\" to secure user's informations.\r\n                                Also use redux to passing the data from back to front and vice versa.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <div className=\"bodyImage3\">\r\n                           <img src={JoshuaContact} alt=\"\" className=\"imageProject2\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer/>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Joshua","D:\\Project\\Tommy Boentoro's\\tommy-boentoro\\src\\Pages\\to-do-list\\todo.jsx",["90"],"import React,{useRef, useEffect} from \"react\"\r\nimport gsap,{Power3} from \"gsap\"\r\nimport {useIntersection} from \"react-use\"\r\nimport \"./../Jati/jati.css\"\r\nimport CSSRulePlugin from \"gsap/CSSRulePlugin\"\r\n\r\n// Import Images\r\n\r\nimport Register from \"./../../assets/todo/register.png\"\r\nimport HomeTodo from \"./../../assets/todo/homeTodo.png\"\r\nimport ModalTodo from \"./../../assets/todo/modal.png\"\r\nimport ActivateTodo from \"./../../assets/todo/activate.png\"\r\n\r\n// Import Css\r\nimport \"./../to-do-list/todo.css\"\r\n\r\n// Footer\r\nimport Footer from \"../../Components/footer\"\r\n\r\nfunction Todo(){\r\n\r\n    let imageJati = useRef(null)\r\n    let imageJatiInner = useRef(null)\r\n    let initialJati = useRef(null)\r\n    let jatiText = useRef(null)\r\n    let jatiProject = useRef(null)\r\n    let jatiDeveloper = useRef(null)\r\n\r\n    let tl = gsap.timeline({delay:\".8\"})\r\n    let imageJatiReveal = CSSRulePlugin.getRule(`.image-outer:after`)\r\n\r\n    useEffect (() => {\r\n        gsap.to(initialJati, {duration:0, css:{visibility:\"visible\"}})\r\n        // IMAGE\r\n        tl.to(imageJatiReveal, {duration:1.4, width:\"0%\", ease:Power3.easeOut})\r\n        .from(imageJatiInner, {duration:1.4, scale:1, ease:Power3.easeOut, delay:\"-1.4\"})\r\n        .from(jatiText, {duration:1.4, opacity:0, ease:Power3.easeOut})\r\n        .from(jatiProject, {duration:1.4, y:100, ease:Power3.easeOut, delay:\"-1\"})\r\n        .from(jatiDeveloper, {duration:1.4, y:100, ease:Power3.easeOut, delay:\"-1.4\"})\r\n        \r\n    })\r\n\r\n    // INTERSECTION\r\n\r\n    const sectionRef = useRef(null);\r\n\r\n    const intersection = useIntersection(sectionRef, {\r\n        root: null,\r\n        rootMargin: \"0px\",\r\n        threshold: 0.8\r\n    });\r\n\r\n    const fadeIn = (sectionRef) => {\r\n        gsap.to(sectionRef, {\r\n            duration: 1,\r\n            opacity: 1,\r\n            y: -60,\r\n            ease: \"Power4.out\",\r\n            stagger: {\r\n                amount: .3\r\n            }\r\n        })\r\n    }\r\n\r\n    const fadeOut = (sectionRef) => {\r\n        gsap.to(sectionRef, {\r\n            duration: 0,\r\n            opacity: 1,\r\n            y: -20,\r\n            ease: \"Power4.out\",\r\n        })\r\n    }\r\n\r\n\r\n    intersection && intersection.intersectionRatio < 0.8 ?\r\n    fadeOut (\".bgJatiBody\")\r\n    : fadeIn(\".bgJatiBody\")\r\n\r\n    return(\r\n        <>\r\n        <div ref={el => initialJati = el} className=\"initialJati\">\r\n            <div className=\"bgJati\">\r\n                <div className=\"d-flex\">\r\n                    <div className=\"headerJati d-flex px-0\">\r\n                        <div ref={el => imageJati = el} className=\"col-12 px-0\">\r\n                            <div className=\"image-outer\" style={{overflow:\"hidden\"}}> \r\n                                <img ref={ el => imageJatiInner = el} src={Register} alt=\"\" className=\"imageJumbotronTodo\" />\r\n                                \r\n                            </div>\r\n                            <div className=\"overlay-black-todo\">\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\" style={{marginTop:\"20px\"}}>\r\n                    <div>\r\n                        <div className = \"fontPlay fontHeader1Todo\" style={{overflow:\"hidden\"}}>\r\n                            <div ref={el => jatiText = el}>\r\n                                To-do-list\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"fontKanit fontHeader2Todo\" style={{overflow:\"hidden\"}}>\r\n                            <div ref={el => jatiProject = el}>\r\n                                Non commercial personal project\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"fontKanit fontHeader3Todo\" style={{overflow:\"hidden\"}}>\r\n                            <div ref={el => jatiDeveloper = el}>\r\n                                Full-stack Developer\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Body */}\r\n            <div className=\"bgJatiBody\" style={{overflow:\"hidden\"}}>\r\n                <div className=\"container\">\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"body1 px-0\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\">\r\n                                <div className=\"textHeaderProject\">\r\n                                    To-do-list\r\n                                </div>\r\n                                <div className=\"mx-3 textlink\">\r\n                                     Contact me for the link!\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"textBodyProject col-md-7 col-12 px-0\">\r\n                                To-do-list is a website that can describe itself by looking at the name. It's a simple and clean\r\n                                website reminder that you can write your to-do-list on it. You can add what you want to do\r\n                                and tick it when it done. You should make an account nad verified it before using this to-do-list website\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <div className=\"bodyImage1Todo\">\r\n                            <img src={HomeTodo} alt=\"\" className=\"imageProject\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-md-row flex-column\">\r\n                        <div className=\"col\">\r\n\r\n                        </div>\r\n                        <div className=\"body3 px-0 col\">\r\n                            <div className=\"textHeaderProject\">\r\n                                Flow & Features\r\n                            </div>\r\n                            <div className=\"textBodyProject px-0\">\r\n                                Due the clean and simple concept, to-do-list only has 2 pages that is register/login page and home page.\r\n                                register/login page contains username and password while in home page there is a button called add data \r\n                                dor you to add your activity and also looking your to-do-list directly in the same page.  \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex px-0\">\r\n                        <div className=\"bodyImage2\">\r\n                            <img src={ModalTodo} alt=\"\" className=\"imageProjectTodo2\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"body3 px-0 col\">\r\n                            <div className=\"textHeaderProject\">\r\n                                Tools\r\n                            </div>\r\n                            <div className=\"textBodyProject col-md-7 col-12 px-0\">\r\n                                I am a MERN stack developer so the tools that i use is React, HTML, CSS for the front-end\r\n                                and nodejs, express, mysql for the back-end. Even this website only contains 2 pages there are\r\n                                a lot of things that i must do to integritate the front and the back. Using redux as a bridge to sending the data\r\n                                and mysql as database.  I used a library called validator just to \r\n                                help me making a validation in register and login page more easier. \r\n                                Using JSON web token \"SHA256\" to secure user's informations\r\n                                and also local storage to send and get the data.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <div className=\"bodyImage3\">\r\n                           <img src={ActivateTodo} alt=\"\" className=\"imageProject2\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer/>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Todo",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":14},{"ruleId":"95","severity":1,"message":"99","line":9,"column":8,"nodeType":"97","messageId":"98","endLine":9,"endColumn":17},{"ruleId":"95","severity":1,"message":"100","line":16,"column":8,"nodeType":"97","messageId":"98","endLine":16,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":26,"column":29,"nodeType":"103","messageId":"104","endLine":26,"endColumn":118,"fix":"105"},{"ruleId":"91","replacedBy":"106"},{"ruleId":"93","replacedBy":"107"},{"ruleId":"95","severity":1,"message":"108","line":18,"column":9,"nodeType":"97","messageId":"98","endLine":18,"endColumn":18},{"ruleId":"95","severity":1,"message":"109","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":15},{"ruleId":"95","severity":1,"message":"110","line":10,"column":9,"nodeType":"97","messageId":"98","endLine":10,"endColumn":13},{"ruleId":"95","severity":1,"message":"111","line":7,"column":9,"nodeType":"97","messageId":"98","endLine":7,"endColumn":21},{"ruleId":"95","severity":1,"message":"112","line":7,"column":23,"nodeType":"97","messageId":"98","endLine":7,"endColumn":29},{"ruleId":"95","severity":1,"message":"113","line":25,"column":9,"nodeType":"97","messageId":"98","endLine":25,"endColumn":14},{"ruleId":"95","severity":1,"message":"114","line":26,"column":9,"nodeType":"97","messageId":"98","endLine":26,"endColumn":18},{"ruleId":"95","severity":1,"message":"115","line":27,"column":9,"nodeType":"97","messageId":"98","endLine":27,"endColumn":15},{"ruleId":"95","severity":1,"message":"116","line":28,"column":9,"nodeType":"97","messageId":"98","endLine":28,"endColumn":20},{"ruleId":"95","severity":1,"message":"117","line":31,"column":9,"nodeType":"97","messageId":"98","endLine":31,"endColumn":11},{"ruleId":"95","severity":1,"message":"118","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":24},{"ruleId":"95","severity":1,"message":"119","line":8,"column":8,"nodeType":"97","messageId":"98","endLine":8,"endColumn":11},{"ruleId":"101","severity":1,"message":"102","line":109,"column":45,"nodeType":"103","messageId":"104","endLine":109,"endColumn":135,"fix":"120"},{"ruleId":"95","severity":1,"message":"108","line":19,"column":9,"nodeType":"97","messageId":"98","endLine":19,"endColumn":18},{"ruleId":"95","severity":1,"message":"108","line":22,"column":9,"nodeType":"97","messageId":"98","endLine":22,"endColumn":18},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'TommyHome' is defined but never used.","'SmoothScroll' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"123","text":"124"},["121"],["122"],"'imageJati' is assigned a value but never used.","'delay' is defined but never used.","'Text' is assigned a value but never used.","'TimelineLite' is defined but never used.","'Power2' is defined but never used.","'hello' is assigned a value but never used.","'container' is assigned a value but never used.","'kucing' is assigned a value but never used.","'imageReveal' is assigned a value but never used.","'tl' is assigned a value but never used.","'CopyToClipboard' is defined but never used.","'Dog' is defined but never used.",{"range":"125","text":"124"},"no-global-assign","no-unsafe-negation",[1319,1319]," rel=\"noreferrer\"",[6180,6180]]